<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">
  <title>KieBase</title>
<para>The jBPM API allows you to first create a knowledge base.  This
    knowledge base should include all your process definitions that might need to
    be executed by that session.  To create a knowledge base, use a KieHelper
    to load processes from various resources (for example from the classpath or from
    the file system), and then create a new knowledge base from that helper. The following
    code snippet shows how to create a knowledge base consisting of only one process 
    definition (using in this case a resource from the classpath).</para>

<programlisting language="java">
  KieHelper kieHelper = new KieHelper();
  KieBase kieBase = kieHelper
                    .addResource(ResourceFactory.newClassPathResource("MyProcess.bpmn"))
                    .build();
</programlisting>

    <para>The ResourceFactory has similar methods to load files from file system, from
    URL, InputStream, Reader, etc.</para>
    <para>This is considered manual creation of knowledge base and while it is simple
    it is not recommended for real application development but more for try outs.
    Following you'll find recommended and much more powerful way of building knowledge base,
    knowledge session and more - RuntimeManager.</para>    
</section>
