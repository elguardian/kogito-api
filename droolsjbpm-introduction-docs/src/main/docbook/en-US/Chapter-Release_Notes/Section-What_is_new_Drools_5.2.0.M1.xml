<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>What is New and Noteworthy in Drools 5.2.0.M1</title>

  <section>
    <title>Drools API</title>
  </section>

  <section>
    <title>Core</title>

    The Classloader has been improved to use a CompositeClassLoader instead of the previous hierarchical "parent" classloader. This was necessary for OSGi where each module needs it's own classpath, but reflection will not work if classloader cannot be found. Modules now add themselves to the composite classloader when first initialised. This is also exposed to the user where the previous Classloader argument on the kbase and kbuilder configuration now takes  vararg of ClassLoaders, all of which are now searchable.
  </section>

  <section>
    <title>Expert</title>

    <section>
      <title>Lazy Truth Maintenance</title>

      <para>You no longer need to enable or disbale truth maintenance, via the
      kbase configuration. It is now handled automatically and turned on only
      when needed. This was done along with the code changes so that all entry
      points use the same code, previous to this the default entry point and
      named entry points used different code, to avoid TMS overhead for event
      processing.</para>
    </section>
  </section>

  <section>
    <title>Guvnor</title>

    <section>
      <title>Guvnor Look &amp; Feel Moving Closer To Native GWT Look</title>

      <para>We are removing the GWT-Ext from Guvnor. This is still a work in
      progress and expected to be finished for the M2 release.</para>
    </section>

    <section>
      <title>Decision Tables</title>

      <para>The existing Guided Decision Table has been replaced to provide a
      foundation on which to build our future guided Decision Table toolset.
      The initial release largely provides an equivalent feature-set to the
      obsolete Guided Decision Table with a few improvements, as explained in
      more detail below. A change from the legacy table was essential for us
      to begin to realise our desire to provide the number one web-based
      decision table available. With this foundation we will be able to expand
      the capabilities of our Guided Decision Table toolset to provide a
      feature rich, user-friendly environment.</para>

      <figure>
        <title>Basic Decision Table</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center"
                       fileref="images/Chapter-Release_Notes/dtable-basic.png"
                       format="PNG" scalefit="1"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>

      <section>
        <title>Cell Merging</title>

        <para>Adjacent cells in the same column with the same value can be
        merged thus eliminating the need for otherwise cluttered views of
        multiple rows containing the same value.</para>

        <figure>
          <title>Merged Decision Table</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/dtable-merged.png"
                         format="PNG" scalefit="1"></imagedata>
            </imageobject>
          </mediaobject>
        </figure>
      </section>

      <section>
        <title>Typed-columns</title>

        <para>The major basic data-types (numeric, date, text and Boolean) are
        handled as such and respond as you'd expect to sorting.</para>

        <figure>
          <title>Datatype Sorting</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/dtable-datatype-sorting.png"
                         format="PNG" scalefit="1"></imagedata>
            </imageobject>
          </mediaobject>
        </figure>
      </section>

      <section>
        <title>Improved header</title>

        <para>The table header section has been improved to show more verbose
        information to facilitate design-time understanding. The table has a
        fixed header that remains as you'd expect, at the top of the table,
        whilst scrolling larger decision tables.</para>

        <figure>
          <title>Scrolling Decision Table</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/dtable-scrolling.png"
                         format="PNG" scalefit="1"></imagedata>
            </imageobject>
          </mediaobject>
        </figure>
      </section>

      <section>
        <title>Tighter integration</title>

        <para>The decision table responds better to changes made to column
        definitions; so changes to column Fact Type, Fact Type field,
        calculation type, value list etc are reflected in the table
        itself.</para>
      </section>
    </section>

    <section>
      <title>Embed Guvnor Editors</title>

      <para>Embed Guvnor Editor's in external applications. You can create or
      edit assets like Business Rules, Technical Rules, DSL definitions and
      Decision Tables in your applications using Guvnor's specific editors.
      You can even edit multiple assets at once.</para>
    </section>

    <section>
      <title>Enhanced Package's Report</title>

      <para>Templates Rules and Decision Tables rules are now included in the
      package's report.</para>
    </section>

    <section>
      <title>Package's Model URL</title>

      <para>The JAR model of the packages is now accessible through an URL,
      just like rules sources and binaries. This allows external applications
      to get not only the rules, but also the model needed to run them.</para>
    </section>

    <section>
      <title>Spring Context Editor</title>

      <para>Now it is possible to create and mange Spring Context files inside
      Guvnor. These Context Files are exposed through URLs so external
      applications can use them.</para>

      <figure>
        <title>Editing Spring Context</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center"
                       fileref="images/Chapter-Release_Notes/editspringcontextguvnor.png"
                       format="PNG" scalefit="1"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Configuring Multiple Guvnor Instances In a Jackrabbit
      Cluster</title>

      <para>We added a new task in drools-ant which helps with configuring
      multiple Guvnor instances to be able to share their Jackrabbit
      content.</para>
    </section>

    <section>
      <title>Configuring Guvnor to use an external RDBMS made easier</title>

      <para>The default Guvnor repository configuration uses embedded Derby
      databases which writes the workspace and version information to the
      local file system. This is not always optimal for a production system
      where it makes sense to use an external RDBMS.</para>

      <para>We added a new section under the "Administration" tab called
      "Repository Configuration" which helps generate the repository.xml
      configuration file for a number of databases (Microsoft SQL Server,
      MySQL, Oracle, PostgreSQL, Derby, H2)</para>
    </section>

    <section>
      <title>Web-based BPMN2 authoring in Guvnor</title>

      <para>We have completed big parts of the integration between Guvnor and
      the Oryx web-based business process editor. Our primary use cases
      supported by this integration are:</para>

      <para>- Viewing existing jBPM5 processes in Guvnor</para>

      <para>- Prototyping new jBPM5 processes in Guvnor.</para>

      <para>Please note that we are still working on full round-tripping
      support between the web-based Oryx editor and our BPMN2 support provided
      through the eclipse plugin</para>
    </section>
  </section>

  <section>
    <title>Merging Drools Flow into jBPM5</title>
    
    <para>The Drools Flow project and the jBPM project have been merged into the
    the newest version of the jBPM project, called jBPM5.  jBPM5 combines the best of both
    worlds: merging the experience that was build up with the jBPM project over
    several years in supporting stable, long-living business processes together with the
    improvements that were prototyped as part of Drools Flow to support more flexible and
    adaptive processes.  Now that jBPM 5.0 has been released, the Drools project
    will be using jBPM5 as the engine to support process capabilities.  Drools Flow
    as a subproject will no longer exist, but its vision will continue as part of the
    jBPM project, still allowing (optional but) advanced integration between business rules, 
    business processes and complex event processing and a unified environment for
    all three paradigms.</para>
    
    <para>The impact for the end user however should be minimal, as the existing
    (knowledge) API is still supported, the underlying implementation has just been replaced
    with a newer version.  All existing features should still be supported, and many more.</para>
    
    <para>For more information, visit <ulink url="http://www.jboss.org/jbpm">http://www.jboss.org/jbpm</ulink></para>
    
  </section>
</section>
