<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">
  <title>What is New and Noteworthy in Drools 5.4.0.CR1</title>

  <section>
    <title>Drools Expert</title>

    <section>
      <title>Decision Tables support "timer" and "calendar" attributes</title>

      <para>Support has been added for the "timer" and "calendar" attributes.</para>

      <table>
        <title>New attributes</title>

        <tgroup cols="3">
          <thead>
            <row>
              <entry>Keyword</entry>

              <entry>Initial</entry>

              <entry>Value</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>TIMER</entry>

              <entry>T</entry>

              <entry>A timer definition. See "Timers and Calendars".</entry>
            </row>

            <row>
              <entry>CALENDARS</entry>

              <entry>E</entry>

              <entry>A calendars definition. See "Timers and Calendars".</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
  </section>

  <section>
    <title>KnowledgeBuilder supports building of cross referencing drl files</title>

    <para>KnowledgeBuilder has a new batch mode, with a fluent interface,
    that allows to build multiple drls at once as in the following example:</para>

    <programlisting>KnowledgeBuilder kbuilder = KnowledgeBuilderFactory.newKnowledgeBuilder();
      kbuilder.batch()
      .add(ResourceFactory.newByteArrayResource(rules1.getBytes()), ResourceType.DRL)
      .add(ResourceFactory.newByteArrayResource(rules2.getBytes()), ResourceType.DRL)
      .add(ResourceFactory.newByteArrayResource(declarations.getBytes()), ResourceType.DRL)
      .build();</programlisting>

    <para>In this way it is no longer necessary to build the drls files in the right order
    (e.g. first the drls containing the type declarations and then the ones with the rules using them)
    and it will also be possible to have circular references among them.</para>

    <para>Moreover the KnowledgeBuilder (regardless if you are using the batch mode or not) also allows to discard
    what has been added with the last drl(s) building. This can be useful to recover from wrong drl as it follows</para>

    <programlisting>kbuilder.add(ResourceFactory.newByteArrayResource(wrongDrl.getBytes()), ResourceType.DRL);
      if ( kbuilder.hasErrors() ) {
      kbuilder.undo();
      }</programlisting>
  </section>

  <section>
    <title>Guvnor</title>

    <section>
      <title>BRL editor supports "timer" and "calendar" attributes</title>

      <para>Support has been added for the "timer" and "calendar" attributes.</para>

      <figure>
        <title>Timer and Calendar</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="images/Chapter-Release_Notes/timerAndCalendarAttributes-guvnor-brl.png"
                       format="PNG"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Decision Tables support "timer" and "calendar" attributes</title>

      <para>Support has been added for the "timer" and "calendar" attributes.</para>

      <figure>
        <title>Timer and Calendar</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center"
                       fileref="images/Chapter-Release_Notes/timerAndCalendarAttributes-guvnor-dtable.png" format="PNG"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Guided Decision Tables import from XLS</title>

      <para>Uploading a XLS decision table results in the creation of numerous new assets, including (obviously)
      web-guided Decision Tables, functions, declarative types and modifications to package globals and imports etc
      (Queries are not converted, although supported in the XLS form, as Guvnor doesn't support them <link
      xlink:href="https://issues.jboss.org/browse/GUVNOR-1532">yet</link>).</para>

      <figure>
        <title>XLS decision table</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="images/Chapter-Release_Notes/dtable-xls.png" format="PNG"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>

      <figure>
        <title>Guided decision table</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="images/Chapter-Release_Notes/dtable-converted.png" format="PNG"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>

      <para>This is the first stage of "round-tripping" decision tables. We still need to add the ability to export a
      guided decision table back to XLS, plus we'd like to add tighter integration of updated XLS assets to their
      original converted cousins - so if a new version of the XLS decision table is uploaded the related assets'
      versions are updated (rather than creating new) upon conversion.</para>

      <para>This is a powerful enhancement and as such your feedback is critical to ensure we implement the feature as
      you'd like it to operate. Check it out, feedback your opinions and help guide the future work.</para>
    </section>

    <section>
      <title>Improved value editors for numerical types</title>

      <para>Numerical "value editors" (i.e. the text boxes for numerical values) in the BRL, Rule Template, Test
      Scenarios and Decision Table editors now support the types Byte, Short, Integer, Long, Double, Float, BigDecimal
      and BigInteger (and their primitive counterparts) correctly.</para>

      <figure>
        <title>Example of using a BigDecimal</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center" fileref="images/Chapter-Release_Notes/guvnor-numeric-value-editors.png"
                       format="PNG"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>
</section>
