<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>What is New and Noteworthy in Drools 5.2.0.CR1</title>

  <section>
    <title>Expert and Fusion</title>

    <section>
      <title>Multi-function Accumulates</title>

      <para>The accumulate CE now supports multiple functions. For instance,
      if one needs to find the minimum, maximum and average value for the same
      set of data, instead of having to repeat the accumulate statement 3
      times, a single accumulate can be used.</para>

      <programlisting>rule "Max, min and average" 
    when
        accumulate( Cheese( $price : price ),
                    $max : max( $price ),
                    $min : min( $price ),
                    $avg : average( $price ) )
    then
        // do something
end </programlisting>
    </section>

    <section>
      <title>Backward Chaining</title>

      <para>After lengthy discussion ':' can no longer be used for multiple
      bindings on the same identifier, this returns it to the pre backward
      chaining behaviour. Instead we introduce a new unification symbol ':='
      which can be used multiple times on the same identifier:</para>

      <programlisting>rule reactiveLook when
    Here( $place := place) 
    ?look($place := place, $things : things, $food : food, $exits : exits)
then
    System.out.println( "You are in the " + $place);
    System.out.println( "  You can see " + $things );
    System.out.println( "  You can eat " + $food );
    System.out.println( "  You can go to " + $exits );
end</programlisting>
    </section>

    <section>
      <title>Non Typesafe Classes</title>

      <para>Previously we said that all constraints on @typesafe(false) where
      evaluated type unsafely. We have changed this so that even with
      @typesafe(false) it will attempt to compile first with type safety,
      which gives faster execution, and only falls back to type unsafe
      evaluation if that fails.Type </para>
    </section>

    <section>
      <title>Type Declaration 'extends'</title>

      <para>Type declarations now support 'extends' keyword for
      inheritence</para>

      <programlisting>declare Student extends Person
    school : String @key
end


declare LongTermStudent extends Student
    years : int @key
    course : String
end</programlisting>
    </section>
  </section>

  <section>
    <title>Guvnor</title>

    <section>
      <title>Annotations come to Declarative Models</title>

      <para>The ability to add annotations in Guvnor to declarative models has
      been added. This allows Fact Types to be defined as events.</para>

      <figure>
        <title>Annotations</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center"
                       fileref="images/Chapter-Release_Notes/declarative-model-annotations.png"
                       format="PNG" scalefit="1"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>

      <figure>
        <title>Annotation editor</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center"
                       fileref="images/Chapter-Release_Notes/declarative-model-annotations-editor.png"
                       format="PNG" scalefit="1"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Support for Complex Event Processing in the guided
      editors</title>

      <para>The guided editors have been enhanced to allow full use of Drools
      Fusion's Complex Event Processing operators, sliding windows and
      entry-points.</para>

      <figure>
        <title>Complex Event Processing</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center"
                       fileref="images/Chapter-Release_Notes/cep-guided-editor.png"
                       format="PNG" scalefit="1"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>
</section>
