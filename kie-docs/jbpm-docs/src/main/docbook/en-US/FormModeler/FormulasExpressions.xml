<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base=".." xml:id="sect-formmodeler-FormulasExpression"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns2="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">

  <title>Formulas</title>

  <para>
    Form Modeler provides a Formula Engine that you can use to automatically calculate field values.
    That Formula engine supports Java and XPATH expressions to access the form fields values.
    Let’s see some examples.
  </para>
  <itemizedlist>
    <listitem>
      <para>Setting a Default value formula</para>
      <para>Imagine that you have a form that contains a date field “Creation date” that has to be set
        by default with the current date. To do that you should edit the field properties and set
        a Default value formula like:
      </para>
      <programlisting language="java">=new java.util.Date();</programlisting>

      <figure>
        <title>Setting default value formula</title>

        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/FormModeler/27_default_value_formula.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </figure>
      <para>After setting a Default formula value on a field properties, when the form is rendered
        by the first time the field will have the specified value.
      </para>
      <figure>
        <title>Rendering field with default formula</title>

        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/FormModeler/28_creationDate.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </figure>
      <para>
        As you can see, you can use a default formula any expression that return a value supported
        for the field.
      </para>
    </listitem>
    <listitem>
      <para>Setting a Formula</para>
      <para>The formula engine allows you to calculate formulas that depend on other Field values using
        XPATH expressions to refer to fields values like {a_field_nane}, standard operators
        (+, -, *, /, %...) to operate with them or calls to Java Functions for more complex operations.
      </para>
      <para>To start let’s see how you can create a formula to calculate the line_total of a Purchase
        Order Line. Look at the image below and look at the formula on the line_total properties.
      </para>
      <figure>
        <title>Rendering field with default formula</title>

        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/FormModeler/29_formula.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </figure>
      <para>With this expression:
        <programlisting language="shell">={line_unitPrice}*{line_amount}</programlisting>
        we’re forcing the Total of the
        line value to be the result of the the Unit price multiplied by the Amount, so when the user
        fills the Amount and Unit Price fields automatically the Total Amount field value is going
        to be calculated and filled with the operation result:
      </para>
      <figure>
        <title>Rendering field with default formula result</title>

        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/FormModeler/30_result.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </figure>
      <para>Is possible to create formulas to operate with values stored in subforms using expressions like</para>
      <programlisting language="shell">={a_field/a_subform_field}</programlisting>
      <para>Look at the next image to see how it works:</para>
      <figure>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/FormModeler/31_formula_2.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </figure>
      <para>This form has a subform field called po_header that is showing a form with the fields
        header_creationDate, header_customer and header_project. We want the Description field
        on our parent form to show some information from the header. Look at the Description
        field properties formula.</para>
      <programlisting language="shell">="Customer: " + {po_header/header_customer} + " Project: " + {po_header/header_project}</programlisting>
      <para>This formula returns a text when the fields header_customer and header_projects are filled
        on the child form, so from now the parent form will be filled like this:
      </para>
      <figure>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/FormModeler/32_execution_formula.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </figure>
      <para>Ok, you’ve seen how to create formulas that access to a subform fields values, now we are going
        to see how to work with values stored in Multiple Subforms. Imagine that we have a Purchase Order
        Line form that contains a multiple subform of Purchase Order Lines, and we want to calculate the
        total amount of the lines created. Look at the image below and how the TOTAL field is configured.
      </para>
      <figure>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/FormModeler/33_formula_3.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </figure>
      <para>On the formula expression:
        <command>={sum(po_lines/line_total)}</command>
        we are using the XPATH function sum() that is going to summarize the totals of all the lines. So after creating
        some Lines the form will look like this:
      </para>
      <figure>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/FormModeler/34_result_2.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </figure>
      <para>Note that the line_total child field corresponds with the field line_total field on then
        form selected as a Default Form selected on the Lines field configuration.
      </para>
      <para>On this sample we are using the sum() XPATH function to calculate the total of the Purchase
        Order, but XPATH provides a lot of possibilities to select values from a set of children and
        also a lot functions to summarize values (sum, count, avg...). For more information about
        XPATH you can take a look at
        <link xlink:href="http://www.w3schools.com/xpath/">http://www.w3schools.com/xpath/</link>
      </para>
    </listitem>
    <listitem>
      <para>Setting a Range Formula</para>
      <para>A range formula allows you to let you specify the values that the user can select from an
        specific field, showing it like a select box. It can be used on all simple types except
        Dates and Checkboxes.
      </para>
      <para>To see how it works look the next image and look at the Review Status field configuration.</para>
      <figure>
        <title>Setting default value formula</title>
        <screenshot>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/FormModeler/35_range_value.png"/>
            </imageobject>
          </mediaobject>
        </screenshot>
      </figure>
      <para>As you can see that field is being shown as a select box and it has a range formula that
        specifies the values like this:</para>
      <programlisting language="shell">{approve,Approve order;reject,Reject order;modifications,Request Modifications}</programlisting>
      <para>This expression is defining 3 duos of value/”text to show” separated with the character ‘,’
        and each of this duos is separated from each other other with the ‘;’ character. So due
        this formula the resulting select box will show:
      </para>
      <para>
        <table frame="all">
          <tgroup align="left" cols="2" colsep="1" rowsep="1">
            <thead>
              <row>
                <entry>Value stored in input</entry>
                <entry>Text shown on Select Box</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>approve</entry>
                <entry>Approve order</entry>
              </row>
              <row>
                <entry>reject</entry>
                <entry>Reject order</entry>
              </row>
              <row>
                <entry>modifications</entry>
                <entry>Request Modifications</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </para>
    </listitem>
  </itemizedlist>

</section>
