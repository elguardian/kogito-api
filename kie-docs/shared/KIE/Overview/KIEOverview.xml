<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd" 
  xml:base="./../../" xml:id="WorkbenchReleaseNotes6000FINAL" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns2="http://www.w3.org/1998/Math/MathML" xmlns:ns="http://docbook.org/ns/docbook">
  <title>KIE - Knowledge Is Everything</title>
  <section>
    <title>Introduction</title>
    <para>It's been a busy year since the last 5.x series release and so much has changed. The New
      and Noteworthy contains a more detailed overview, but this section will highlight a few of the
      juicy items.</para>
    <para>One of the biggest complaints during the 5.x series was the lack of defined methodology for
      deployment. The mechanism used by Drools and jBPM was very flexible, but it was too flexible.
      A big focus for 6.0 was streamlining the build, deploy and loading(utilization) aspects of the
      system. Building and deploying now align with Maven and the utilization is now convention and
      configuration oriented, instead of programmatic, with sane default to minimise the
      configuration.</para>
    <para>The workbench has been rebuilt from the ground up, inspired by Eclipse, to provide a
      flexible and better integrated solution; with panels and perspectives via plugins. The base
      workbench has been spun off into a standalone project called UberFire, so that anyone now can
      build high quality web based workbenches. In the longer term it will facilitate user
      customised Drools and jBPM installations.</para>
    <para>Git replaces JCR as the content repository, offering a fast and scalable back-end storage
      for content that has strong tooling support. There has been a refocus on simplicity away from
      databases with an aim of storing everythign as as text file, even meta data is just a file.
      The database is just there to provide fast indexing and search via Lucene. This will allow
      repositories now to be synced and published with estbalished infrastructure, like
      GitHub.</para>
    <para>jBPM has been dramatically beefed up, thanks to the Polymita acquisition, with human
      tasks, form builders, class modellers, execution servers and runtime management. All fully
      integrated into the new workbench.</para>
  </section>
  <section>
    <title>KIE and KIE Subprojects</title>
  <para>The process of researching an integration knowledge solution for Drools and jBPM has simply
      used the "droolsjbpm" group name. This name permeates GitHub accounts and Maven POMs. As
      scopes broadened and new projects were spun KIE, an acronym for Knowledge Is Everything, was
      chosen as the new group name.  The KIE name is also used for the shared aspects of the system;
      such as the unified build, deploy and utilization.</para>
  <para>KIE currently consists of the following subprojects:</para>
    <figure>
      <title>KIE Overview</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/KIE/Overview/kie.png"/>
        </imageobject>
      </mediaobject>
    </figure>
  <para>OptaPlanner, a local search and optimization tool, has been spun off from Drools Planner and
      is now a top level project with Drools and jBPM. This was a natural evolution as Optaplanner,
      while having strong Drools integration, has long been independant of Drools. </para>
  <para>From the Polymita acquisition, along with other things, comes the powerful Dashboard Builder
      which provides powerful reporting capabities. Dashboard Builder is currently a temporary name
      and after the 6.0 release a new name will be chosen. Dashboard Builder is completely
      independant of Drools and jBPM and will be used by many projects at JBoss, and hopefully
      outside of JBoss :)</para>
    <para>UberFire is the new base workbench project, spun off from the ground up rewrite. UberFire
      provides Eclipse-like workbench capabilities, with panels and perspectives from plugins. The
      project is independant of Drools and jBPM and anyone can use it as a basis of building
      flexible and powerful workbenches. UberFire will be used for console and workbench development
      throughout JBoss.</para>
    <para>It was determined that the Guvnor brand leaked too much from its intested role; such as
      the authoring metaphors, like Decision Tables, being considered Guvnor components instead of
      Drools components. This wasn't helped by the monolithic projects structure used in 5.x for
      Guvnor. In 6.0 Guvnor's focus has been narrowed to encapsulates the set of UberFire plugins
      that provide the basis for building a web based IDE. Such as Maven integration for building
      and deploying, management of Maven repositories and activity notifications via inboxes. Drools
      and jBPM build workbench distributions using Uberfire as the base and including a set of
      plugins, such as Guvnor, along with their own plugins for things like decision tables, guided
      editors, BPMN2 designer, human tasks. The Drools workbench is called Drools-WB. KIE-WB is the
      uber workbench that combined all the Guvnor, Drools and jBPM plugins. The jBPM-WB is ghosted
      out, as it doesn't actually exist, being made redundant by KIE-WB.</para>
  </section>
  <section>
    <title>KIE Aspects and Lifecycle Terminology</title>
    <para>The different aspects, or life cycles, of working with KIE system, whether it's Drools or jBPM, can typically be characterised by the following:</para>
    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">Author</emphasis>
          <itemizedlist>
            <listitem>
              <para>Authoring of knowledge using a UI metaphor, such as: DRL, BPMN2, decision table,
                class models.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Build</emphasis><itemizedlist>
            <listitem>
              <para>Builds the authored knowledge into deployable units.</para>
            </listitem>
            <listitem>
              <para>For KIE this unit is a JAR.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Test</emphasis><itemizedlist>
            <listitem>
              <para>Test KIE knowedge before it's deployed to the application.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Deploy</emphasis><itemizedlist>
            <listitem>
              <para>Deploys the unit to a location where applications may utilize (consume)
                them.</para>
            </listitem>
            <listitem>
              <para>KIE uses Maven style repository.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Utilize</emphasis><itemizedlist>
            <listitem>
              <para>The loading of a JAR to provide a KIE session (KieSession), for which the
                application can interact with.</para>
            </listitem>
            <listitem>
              <para>KIE exposes the JAR at runtime via a KIE container (KieContainer).</para>
            </listitem>
            <listitem>
              <para>KieSessions, for the runtimes to interact with, are created from the
                KieContainer.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Run</emphasis><itemizedlist>
            <listitem>
              <para>System interaction with the KieSession, via API.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Work</emphasis><itemizedlist>
            <listitem>
              <para>User interaction with the KieSession, via command line or UI.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Manage</emphasis><itemizedlist>
            <listitem>
              <para>Manage any KieSession or KieContainer.</para>
            </listitem>
          </itemizedlist></para>
      </listitem>
    </itemizedlist>
  </section>
</section>
