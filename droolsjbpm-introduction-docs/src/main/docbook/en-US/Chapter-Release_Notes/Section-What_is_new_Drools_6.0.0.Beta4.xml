<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xml:id="releaseNotes_6.0.0.Beta4-SNAPSHOT"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>What is New and Noteworthy in Drools 6.0.0.Beta4</title>

  <section xml:id="releaseNotes_6.0.0.Beta4_Expert">
    <title>Drools Expert</title>

    <section>
      <title>TODO</title>

      <para>TODO</para>
    </section>
  </section>

  <section xml:id="releaseNotes_6.0.0.Beta4_DroolsWorkbench">
    <title>Drools Workbench</title>

    <section>
      <title>General</title>

      <para>Many things are changing for Drools 6.0.</para>

      <para>Along with the functional and feature changes we have restructured
      the <link
      xlink:href="https://github.com/droolsjbpm/guvnor">Guvnor</link> github
      repository to better reflect our new architecture. Guvnor has
      historically been the web application for Drools. It was a composition
      of editors specific to Drools, a back-end repository and a simplistic
      asset management system.</para>

      <para>Things are now different.</para>

      <para>For Drools 6.0 the web application has been extensively re-written
      to use <link
      xlink:href="http://droolsjbpm.github.io/uberfire/">UberFire</link> that
      provides a generic Workbench environment, a Metadata Engine, Security
      Framework, a VFS API and clustering support.</para>

      <para>Guvnor has become a generic asset management framework providing
      common services for generic projects and their dependencies. Drools use
      of both UberFire and Guvnor has born the Drools Workbench.</para>

      <para>A picture always helps:</para>

      <figure>
        <title>New structue</title>

        <mediaobject>
          <imageobject>
            <imagedata align="center"
                       fileref="images/Chapter-Release_Notes/kie-structure.png"
                       format="PNG"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para/>

      <section>
        <title><link
        xlink:href="https://github.com/droolsjbpm/uberfire">uberfire</link></title>

        <para>UberFire is the foundation of all components for both Drools and
        jBPM. Every editor and service leverages UberFire. Components can be
        mixed and matched into either a full featured application of used in
        isolation.</para>
      </section>

      <section>
        <title><link
        xlink:href="https://github.com/droolsjbpm/guvnor">guvnor</link></title>

        <para>Guvnor adds project services and dependency management to the
        mix.</para>

        <para>At present Guvnor consists of few parts; being principally a
        port of common project services that existed in the old Guvnor. As
        things settle down and the module matures pluggable workflow will be
        supported allowing for sensitive operations to be controlled by jBPM
        processes and rules. Work is already underway to include this for
        6.0.</para>
      </section>

      <section>
        <title><link
        xlink:href="https://github.com/droolsjbpm/kie-wb-common">kie-wb-common</link></title>

        <para>Both Drools and jBPM editors and services share the need for a
        common set of re-usable screens, services and widgets.</para>

        <para>Rather than pollute Guvnor with screens and services needed only
        by Drools and jBPM this module contains such common
        dependencies.</para>

        <para>It is possible to just re-use the UberFire and Guvnor stack to
        create your own project-based workbench type application and take
        advantage of the underlying services.</para>
      </section>

      <section>
        <title><link
        xlink:href="https://github.com/droolsjbpm/drools-wb">Drools Workbench
        (drools-wb)</link></title>

        <para>Drools Workbench is the end product for people looking for a web
        application that is composed of all Drools related editors, screens
        and services. It is equivalent to the old Guvnor.</para>

        <para>Looking for the web application to accompany Drools Expert and
        Drools Fusion; an environment to author, test and deploy rules. This
        is what you're looking for.</para>
      </section>

      <section>
        <title><link
        xlink:href="https://github.com/droolsjbpm/kie-wb-distributions/tree/master/kie-drools-wb">KIE
        Drools Workbench (kie-drools-wb)</link></title>

        <para>KIE Drools Workbench (for want of a better name - it's amazing
        how difficult names can be) is an extension of Drools Workbench
        including jBPM Designer to support Rule Flow.</para>

        <para>jBPM Designer, now being an UberFire compatible component, does
        not need to be deployed as a separate web application. We bundle it
        here, along with Drools as a convenience for people looking to author
        Rule Flows along side their rules.</para>
      </section>

      <section>
        <title><link
        xlink:href="https://github.com/droolsjbpm/kie-wb-distributions/tree/master/kie-wb">KIE
        Workbench (kie-wb)</link></title>

        <para>This is the daddy of them all.</para>

        <para>KIE Workbench is the composition of everything known to man;
        from both the Drools and jBPM worlds. It provides for authoring of
        projects, data models, guided rules, decision tables etc, test
        services, process authoring, a process run-time execution environment
        and human task interaction.</para>

        <para>KIE Workbench is the old Guvnor, jBPM Designer and jBPM Console
        applications combined. On steroids.</para>
      </section>

      <section>
        <title>The World is not enough?</title>

        <para>You may have noticed; KIE Drools Workbench and KIE Workbench are
        in the same repository. This highlights a great thing about the new
        module design we have with UberFire. Web applications are just a
        composition of dependencies.</para>

        <para>You want your own web application that consists of just the
        Guided Rule Editor and jBPM Designer? You want your own web
        application that has the the Data Modeller and some of your own
        screens?</para>

        <para>Pick your dependencies and add them to your own UberFire
        compliant web application and, as the saying goes, the world is your
        oyster.</para>
      </section>
    </section>

    <section>
      <title>Drools Workbench - In depth</title>

      <para>Drools Workbench is the corner stone of the new function and
      features for 6.0.</para>

      <para>Many of the new concepts and functions are described in more
      detail in the following sections.</para>

      <important>
        <para>Remember Drools Workbench is integrated into other
        distributions. Therefore many of the core concepts and functions are
        also within the other distributions. Furthemore jBPM web-based Tooling
        extends from UberFire and re-use features from Drools Workbench that
        are common across the KIE platform; such as Project Explorer, Project
        Editor and the M2 Repository.</para>
      </important>

      <section>
        <title>Home</title>

        <para>Home is where the heart is.</para>

        <para>Drools Workbench starts with a Home Page that will provides
        short-cut navigation to common tasks.</para>

        <para>What is provided in this release is minimal and largely a
        cosmetic exercise to hopefully increase usability for non-technical
        people.</para>

        <para>The appearance and content of the Home is likely to change as we
        approach a final release.</para>

        <figure>
          <title>Home</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/drools-wb-homepage.png"
                         format="PNG"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>

      <section>
        <title>Project Explorer</title>

        <para>The Project Explorer is where most users will find themselves
        when authoring projects.</para>

        <para>The Project Explorer shows four drop-down selectors that are
        driven by Group, Repository, Project and Package.<itemizedlist>
            <listitem>
              <para>Group : The top level logical entitiy within the KIE
              world. This can represent a Company, Organization, Department
              etc.</para>
            </listitem>

            <listitem>
              <para>Repository : Groups have access to one or more
              repositories. Default repositories are setup; but you can create
              or clone your own.</para>
            </listitem>

            <listitem>
              <para>Project : Repositories contain one or more KIE projects.
              New Projects can be created using the "New" Menu option,
              provided a target repository is selected.</para>
            </listitem>

            <listitem>
              <para>Package : The package concept is no different to Guvnor
              5.5. Projects contain packages.</para>
            </listitem>
          </itemizedlist></para>

        <para>Once a Group, Repository, Project and Package are selected the
        Project Explorer shows the items within that context.</para>

        <figure>
          <title>Project Explorer</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/drools-wb-projectexplorer.png"
                         format="PNG"/>
            </imageobject>
          </mediaobject>
        </figure>

        <warning>
          <para>The Project Explorer will support both a Business and
          Technical views. The Technical view will probably not make it into
          6.0.0.Beta4.</para>
        </warning>
      </section>

      <section>
        <title>Creating new things</title>

        <para>Creation of anything "new" is accomplished using the "New" menu
        option.</para>

        <para>The types of thing that can be created from the "New" menu
        option depends upon the selected context. Projects require a
        Repository; rules, tests etc require a Package within a Project. New
        things are created in the context selected in the Project Explorer.
        I.E. if Repository 1, Project X is selected new items will be created
        in Project X.</para>

        <figure>
          <title>New Menu</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/drools-wb-newitem-menu.png"
                         format="PNG"/>
            </imageobject>
          </mediaobject>
        </figure>

        <figure>
          <title>New Popup</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/drools-wb-newitem-popup.png"
                         format="PNG"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>

      <section>
        <title>Editing</title>

        <para>By and large, other than the specific changes mentioned in this
        document, all of the old Guvnor asset editors have been ported to 6.0
        with no or little change.</para>

        <para>The layout of the workbench has however changed and the
        following screen-shots give an example of the new, common layout for
        most editors.</para>

        <section>
          <title>The Editor itself</title>

          <para>Asset editors have been ported to 6.0 with no or little
          change.</para>

          <figure>
            <title>The Editor</title>

            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="images/Chapter-Release_Notes/drools-wb-guided-rule-editor.png"
                           format="PNG"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>

        <section>
          <title>The Source View</title>

          <para>The (DRL) Source View of the asset has been moved to a
          mini-tab within the editor.</para>

          <figure>
            <title>The Source View</title>

            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="images/Chapter-Release_Notes/drools-wb-source-view.png"
                           format="PNG"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>

        <section>
          <title>The Imports View</title>

          <para>Types not within the package that contains the asset being
          authored need to be imported before they can be used.</para>

          <para>Guvnor 5.5 had the user define package-wide imports from the
          Package Screen. Drools Workbench 6.0 has moved the selection of
          imports from the Package level to the Asset level; positioning the
          facility on a mini-tab within the editor.</para>

          <figure>
            <title>The Imports View</title>

            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="images/Chapter-Release_Notes/drools-wb-imports.png"
                           format="PNG"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>

        <section>
          <title>The Meta Data</title>

          <para>Meta Data has been moved to a mini-tab within the
          editor.</para>

          <figure>
            <title>The Meta Data</title>

            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="images/Chapter-Release_Notes/drools-wb-metadata.png"
                           format="PNG"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
      </section>

      <section>
        <title>Project Editor</title>

        <para>Project editor does what Package Editor did previously. It
        manages the the KIE projects. You can access the Project Editor from
        the menu bar Tools-&gt;Project Editor. The editor shows the
        configurations for the current active project and the content changes
        when you move around in your code repository.</para>

        <figure>
          <title>How to access the Project Editor</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/PE-menu.png"
                         format="PNG"/>
            </imageobject>
          </mediaobject>
        </figure>

        <section>
          <title>Group artifact version options</title>

          <para>Allows you to set the group, artifact and version id's for the
          project. Basically this screen is editing a pom.xml since we use
          Maven to build our KIE projects.</para>

          <figure>
            <title>Panel for editing group, artifact and version id</title>

            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="images/Chapter-Release_Notes/PE-GAV.png"
                           format="PNG"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>

        <section>
          <title>Dependencies options</title>

          <para>Lets you set the dependencies for the current project. It is
          possible to pick the the resources from an internal
          repository.</para>

          <figure>
            <title>Dependencies for the current project</title>

            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="images/Chapter-Release_Notes/PE-repository.png"
                           format="PNG"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>

        <section>
           

          <title>Metadata</title>

           

          <para/>

           The different files used by the Project Editor still have metadata like they did in Guvnor 5.x. 

          <figure>
            <title>Metadata for pom.xml</title>

            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="images/Chapter-Release_Notes/PE-metadata.png"
                           format="PNG"/>
              </imageobject>
            </mediaobject>
          </figure>

           
        </section>

        <section>
          <title>Knowledge bases and sessions options</title>

          <para>Editor for kmodule.xml explained more detail in the KIE core
          documentation. Editors for knowledge bases and knowledge session
          inside.</para>

          <figure>
            <title>Knowledge bases and sessions defined in the current
            project</title>

            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="images/Chapter-Release_Notes/PE-kbases-and-sessions.png"
                           format="PNG"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>

        <section>
          <title>Import suggestions</title>

          <para>In import suggestions it is possible to specify a set of
          imports used in the project. Each editor has it's own imports now.
          Because of this these imports differ from what Guvnor 5.x Package
          Editor had, the imports are no longer automatically used in each
          asset, they just make use automated editor in KIE workbench easier
          and suggest fact types that the user might want to use.</para>

          <figure>
            <title>Imports that will be used as suggestions in the
            editors</title>

            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="images/Chapter-Release_Notes/PE-imports.png"
                           format="PNG"/>
              </imageobject>
            </mediaobject>
          </figure>
        </section>
      </section>

      <section>
        <title>Incremental Builds</title>

        <para>Whenever a Project is built or an asset saved they are
        validated.</para>

        <para>In the example below, the Fact Type "Smurf" has not been
        imported into the project and hence cannot be resolved.</para>

        <figure>
          <title>The Problems panel</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/drools-wb-incremental-build.png"
                         format="PNG"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>

      <section>
        <title>Data Modeller</title>

        <para>[wmedvede] TODO</para>
      </section>

      <section>
        <title>M2 Repository</title>

        <para>Upload, download and manage KJars with Guvnor M2 repository.
        </para>

        <figure>
          <title>M2 Repository</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/M2_repo_overview.png"
                         format="PNG"/>
            </imageobject>
          </mediaobject>
        </figure>

        <para>Upload KJars to Guvnor M2 repository:</para>

        <para>A KJar has a pom.xml (and pom.properties) that define the GAV
        and POJO model dependencies. If the pom.properties is missing the user
        is prompted for the GAV and a pom.properties file is appended to the
        JAR before being uploaded to Guvnor M2 repo.</para>

        <para/>

        <figure>
          <title>2 Repository</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/M2_repo_gav_warning.png"
                         format="PNG"/>
            </imageobject>
          </mediaobject>
        </figure>

        <figure>
          <title>M2 Repository</title>

          <mediaobject>
            <imageobject>
              <imagedata align="center"
                         fileref="images/Chapter-Release_Notes/M2_repo_gav.png"
                         format="PNG"/>
            </imageobject>
          </mediaobject>
        </figure>

        <para>The Guvnor M2 REPO is exposed via REST with URL pattern
        http://{ServerName}/{httpPort}/{droolsWBWarFilename}/rest</para>

        <para/>
      </section>

      <section>
        <title>Data Migration</title>

        <para>jcr2vfs is a cli tool that migrates legancys Guvnor repository
        to 6.0.</para>

        <para>runMigration --help</para>

        <para>usage: runMigration [options...]</para>

        <para>-f,--forceOverwriteOutputVfsRepository Force overwriting the
        Guvnor 6 VFS repository</para>

        <para>-h,--help help for the command.</para>

        <para>-i,--inputJcrRepository &lt;arg&gt; The Guvnor 5 JCR
        repository</para>

        <para>-o,--outputVfsRepository &lt;arg&gt; The Guvnor 6 VFS
        repository</para>

        <para/>
      </section>

      <section>
        <title>REST</title>

        <para>The GuvnorNG Rest API provides access to project "service"
        resources, i.e., any "service" that is not part of the underlying
        persistence mechanism (i.e, Git, VFS).</para>

        <para>The http address to use as base address is
        http://{ServerName}/{httpPort}/{droolsWBWarFilename}/rest where
        ServerName is the host name on the server on which drools-wb is
        deployed, httpPort the port number (8080 by default development) and
        droolsWBWarFilename the name of the archived deployed
        (drools-workbench-6.0.0 for version 6.0) without the extension.</para>

        <para>Check this doc for API details:
        https://app.apiary.io/jervisliu/editor</para>

        <para/>
      </section>
    </section>
  </section>

  <section xml:id="releaseNotes_6.0.0.Beta4_OptaPlanner">
    <title>OptaPlanner (AKA Drools Planner)</title>

    <section>
      <title>TODO</title>

      <para>TODO</para>
    </section>
  </section>
</section>
