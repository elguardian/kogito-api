<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">
  <title>What is New and Noteworthy in Drools 5.4.0.Beta1</title>

  <section>
    <title>Guvnor</title>

    <section>
      <title>Decision table analysis</title>

      <para>On the bottom of Web decision tables, the button <guilabel>Analyze...</guilabel> that checks for issues in
      your decision table, now also checks for 2 new detection.</para>

      <section>
        <title>Duplicate match detection</title>

        <para>A duplicate match are 2 rows in a decision table that can both match but have the same actions.</para>

        <para>For example: a person between 20 and 40 has to pay a fee of 400 and a person between 30 and 50 has to pay
        a fee of 400 too. These 2 rows duplicate each other. If the fee would be different between them, then they would
        conflict each other.</para>
      </section>

      <section>
        <title>Multiple values for one action detection</title>

        <para>A multiple values for one action match is 1 row in a decision table who's actions contradict itself. This
        is a common problem in limited entry tables.</para>

        <para>For example: a person below 40 has to pay the standard fee (400) and also has to pay the youngster fee
        (200). Since fee can only be set once, that's a problem.</para>
      </section>
    </section>
  </section>

  <section>
    <title>Planner</title>

    <section>
      <title>Benchmarker supports custom input and output files</title>

      <para>The Benchmarker can now read and write the input and output files from any format, through the
      <literal>ProblemIO</literal> interface. The default is still an XStream implementation.</para>
    </section>
  </section>
</section>
