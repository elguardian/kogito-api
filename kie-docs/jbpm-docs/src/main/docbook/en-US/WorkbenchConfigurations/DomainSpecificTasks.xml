<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xml:id="WorkbenchDomainSpecificTasks"
       xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
       xml:base="../" xmlns="http://docbook.org/ns/docbook"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
       xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">

       <title>Domain Specific Tasks (Connectors)</title>
       <para>Domain Specific Tasks (Connectors) are the way to integrate your business processes
              with external services that can be inside or outside your company. These connectors
              are considered technical assets and because of that needs to be handled by technical
              users. Most of the time it is recommended to not change/modify the connectors when the
              application is running, and for that reason these connectors needs to be provided for
              the application to use in runtime. Three things are required to use a Custom
              Connector: </para>
       
       <para>
              <itemizedlist>
                     <listitem>
                            <para>Provide an implementation of the WorkItemHandler interface, which
                                   is the one that will be executed in runtime.</para>
                     </listitem>
                     <listitem>
                            <para>Bind the implementation to a Service Task name.</para>
                     </listitem>
                     <listitem>
                            <para>Create the WorkItem Descriptor inside the tool.</para>
                     </listitem>
              </itemizedlist>
       </para>
       <para>In order to provide these three configuration points you can take a look at the
              Customer Relationship example in the jbpm-playground repository. </para>
       
       <mediaobject>
              <imageobject>
                     <imagedata align="center" format="PNG" role=""
                            fileref="images/WorkbenchConfigurations/customer-relationships.png"
                            width="600" height="200"/>
              </imageobject>
       </mediaobject>
       
       <para>The main idea here is to have a separate project that contains the workItems
              implementations, for example: CreateCustomerWorkItemHandler, you will need to compile
              this project with Maven and install the produced JAR file inside the KIE-WB
              application. In order to do that you just copy the
              customer-services-workitems-1.0-SNAPSHOT.jar into the WEB-INF/lib directory of the
              kie-wb.war app. On this example the workItemHandler implementations interacts with a
              public web service that you can check here, so you will require Internet connection
              in order to try this example. </para>
       <para>Notice also that inside the customer-relationship project there are some high level
              mappings of the Domain Specific Tasks that can be used inside our Customer
              Relationship Project -> WorkItemDefinitions.wid. </para>
       
       <mediaobject>
              <imageobject>
                     <imagedata align="center" format="PNG" role=""
                            fileref="images/Chapter-Configurations/wid.png" width="700" height="200"
                     />
              </imageobject>
       </mediaobject>
       
       <para>This configuration will basically add you Service Tasks inside the Process Designer
              Palette: </para>
       
       <mediaobject>
              <imageobject>
                     <imagedata align="center" format="PNG" role=""
                            fileref="images/Chapter-Configurations/service-tasks.png" width="200"
                            height="200"/>
              </imageobject>
       </mediaobject>
       
       <para>The last step is to bind the High Level mapping to their implementation for this
              environment. You can do that by adding new entries into the
              WEB-INF/classes/META-INF/CustomWorkItemHandlers.conf file, for this example we just
              need to add the following entries: </para>
       <programlisting>
          …
        “CreateCustomer”: new org.jbpm.customer.services.CreateCustomerWorkItemHandler(),
        “AddCustomerComment”: new org.jbpm.customer.services.AddCustomerCommentsWorkItemHandler(),
        “ManagersReport”: new org.jbpm.customer.services.ManagersReportWorkItemHandler(),
        …
      </programlisting>
</section>
